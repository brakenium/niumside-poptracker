name: Tests

env:
  RUST_BACKTRACE: full
  CARGO_TERM_COLOR: always

on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/builds.yaml
      - migrations/**
      - src/**
      - .sqlx/**
      - .cargo/**
      - '!.cargo/audit.toml'
      - Cargo.toml
      - Cargo.lock
      - build.rs
      - Dockerfile
      - .dockerignore
      - rust-toolchain.toml

  workflow_dispatch:

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cargo-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          #          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          #          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-gnueabihf
    #          - armv7-unknown-linux-musleabi
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: sudo apt-get install -y libssl-dev

      - name: Install cross compilation dependencies for aarch64-unknown-linux-gnu
        run: sudo apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
        if: matrix.target == 'aarch64-unknown-linux-gnu'

      - name: Install cross compilation dependencies for armv7-unknown-linux-gnueabihf
        run: sudo apt-get install -y gcc-arm-linux-gnueabihf binutils-arm-linux-gnueabihf
        if: matrix.target == 'armv7-unknown-linux-gnueabihf'

      - name: Install Rust toolchain
        run: rustup update && rustup toolchain install stable

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Store rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Test
        run: cargo test --target ${{ matrix.target }}