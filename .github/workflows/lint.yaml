name: Rust PR Lint

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Cargo Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Rust toolchain
        run: rustup update && rustup toolchain install $(cat rust-toolchain.toml | grep channel | cut -d '"' -f 2)

      - name: Cache target directory
        id: cache-target
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ matrix.target }}-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        if: steps.cache-target.outputs.cache-hit != 'true'
        run: cargo build --target ${{ matrix.target }}

  clippy:
    name: Cargo Clippy
    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Rust toolchain
        run: rustup update && rustup toolchain install $(cat rust-toolchain.toml | grep channel | cut -d '"' -f 2)

      - name: Cache target directory
        id: cache-target
        uses: actions/cache/restore@v3
        with:
          path: target
          key: ${{ matrix.target }}-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Clippy
        run: cargo clippy --all-features -- -D warnings

  unused-deps:
    name: Unused Cargo dependencies
    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Rust toolchain
        run: rustup update && rustup toolchain install $(cat rust-toolchain.toml | grep channel | cut -d '"' -f 2)

      - name: Cache target directory
        id: cache-target
        uses: actions/cache/restore@v3
        with:
          path: target
          key: ${{ matrix.target }}-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo-udeps
        run: brew install cargo-udeps

      - name: Run cargo-udeps
        run: cargo udeps --all-targets --locked
